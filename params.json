{"name":"使用Python转换markdown为HTML","tagline":"python markdown","body":"## 前言\r\nmarkdown是技术博客主比较喜欢的书写格式。很多博客引擎都实现了markdown书写的文档转换成静态的html文件。  \r\n[markdown类库](http://pythonhosted.org/Markdown/reference.html)是markdown转换html的Python版实现。\r\n\r\n## 环境准备\r\n- 首先通过`pip`安装markdown模块：\r\n\r\n```\r\npip install markdown\r\n```\r\n\r\n## 代码示例\r\n\r\n```\r\nimport markdown\r\n\r\n// markdown提供两个接口，一个允许转换字符串，一个进行文件的转换。\r\n// 1. 对字符串的转换\r\nhtml1 = markdown.markdown(your_text_string)\r\n\r\n// 2. 对文件进行转换\r\nhtml2 = markdown.markdown(input=source_file, output=target_file, [encoding])\r\n```\r\n\r\n详细的API可以查看[这里](http://pythonhosted.org/Markdown/reference.html)\r\n\r\n## 编写调用脚本\r\n为了使用方便，我写了一个简单的调用脚本`converter.py`:\r\n\r\n```python\r\nimport sys, getopt, markdown\r\n\r\ndef parse(argv):\r\n    try:\r\n        opts,vals = getopt.getopt(argv, \"i:o:\")\r\n    except getopt.GetoptError:\r\n        print('usage: converter.py -i <source_file> [-o <target_file>]')\r\n        sys.exit(2)\r\n\r\n    source_file = ''\r\n    target_file = ''\r\n    for opt, val in opts:\r\n        if opt == '-i':\r\n            source_file = val\r\n        elif opt == '-o':\r\n            target_file = val\r\n\r\n    if source_file == '':\r\n        print('usage: converter.py -i <source_file> [-o <target_file>]')\r\n        sys.exit(2)\r\n\r\n    if target_file == '':\r\n        target_file = source_file+'.html'\r\n\r\n    markdown.markdownFromFile(input=source_file, output=target_file)\r\n    print('convert successfully.')\r\n\r\nif __name__ == '__main__':\r\n    parse(sys.argv[1:])\r\n```\r\n\r\n现在可以直接使用如下命令行进行调用：\r\n\r\n```shell\r\npython converter.py -i test.md -o test.html\r\n```\r\n\r\n---\r\n### 相关链接\r\n1. [waylan/Python-Markdown](https://github.com/waylan/Python-Markdown)\r\n2. [Python Command Line Arguments](http://www.tutorialspoint.com/python/python_command_line_arguments.htm)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}